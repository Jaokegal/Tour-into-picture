function [foreground, img_FG]= maskBackground(img, pos)
L = superpixels(img,500);
%使用 superpixels 函数将图像分割成 500 个超像素
x_sp_fore = pos(:, 1);
y_sp_fore = pos(:, 2);
% y_sp_fore=[max_y_fore;max_y_fore;min_y_fore;min_y_fore]';
% x_sp_fore=[min_x_fore;max_x_fore;max_x_fore;min_x_fore]';
%定义前景区域的四个顶点的 x 和 y 坐标
roi = poly2mask(x_sp_fore,y_sp_fore,size(L,1),size(L,2));
%使用 poly2mask 函数创建一个与图像大小相同的二值掩模，前景区域为 1，其他区域为 0
BW = grabcut(img,L,roi);
% BW = imcrop(img,x_sp_fore,y_sp_fore);
%使用 grabcut 算法进行图像分割，根据提供的超像素和初始掩模 roi，生成前景掩模 BW（值为 1 表示前景，0 表示背景）
foreground = img;
foreground(repmat(~BW,[1 1 3])) = 1;
% foreground = fgTransparency(foreground)
%将图像的背景部分置为黑色，仅保留前景部分。
%使用 repmat 函数将二值掩模 BW 扩展到 3 通道，与原始图像 img 的大小匹配
img(repmat(BW,[1 1 3])) = 0;
img_FG = inpaintExemplar(img,BW,'FillOrder','tensor');
%将图像的前景部分置为黑色，仅保留背景部分。
%使用 inpaintExemplar 函数对背景部分进行修复，填充被前景掩盖的区域。
end